{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import contract from'../SC/contract.js';import UserPage from'../components/userPage.js';import ManufacturerDashboard from'../components/manufacturerPage.js';import NotFound from'../components/notFound.js';import MintProduct from'../components/mintProduct.js';import BurnProduct from'../components/burnProduct.js';import'../css_files/App.css';import web3 from'../SC/web3.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[isManufacturer,setIsManufacturer]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{const MANUFACTURER_ROLE=web3.utils.keccak256(\"MANUFACTURER_ROLE\");const checkUserRole=async()=>{try{const accounts=await web3.eth.getAccounts();if(accounts.length===0){console.error(\"No accessible accounts. Make sure MetaMask is connected.\");return;}const userAddress=accounts[0];const hasManufacturerRole=await contract.methods.hasRole(MANUFACTURER_ROLE,userAddress).call();setIsManufacturer(hasManufacturerRole);}catch(error){console.error(\"Error checking user role:\",error);}finally{setLoading(false);}};checkUserRole();},[]);if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Navigate,{to:isManufacturer?\"/manufacturer-dashboard\":\"/user-dashboard\"})}),/*#__PURE__*/_jsx(Route,{path:\"/manufacturer-dashboard\",element:isManufacturer?/*#__PURE__*/_jsx(ManufacturerDashboard,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/user-dashboard\"})}),/*#__PURE__*/_jsx(Route,{path:\"/user-dashboard\",element:/*#__PURE__*/_jsx(UserPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/mint-product\",element:isManufacturer?/*#__PURE__*/_jsx(MintProduct,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\"})}),/*#__PURE__*/_jsx(Route,{path:\"/burn-product\",element:isManufacturer?/*#__PURE__*/_jsx(BurnProduct,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\"})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(NotFound,{})})]})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","contract","UserPage","ManufacturerDashboard","NotFound","MintProduct","BurnProduct","web3","jsx","_jsx","jsxs","_jsxs","App","isManufacturer","setIsManufacturer","loading","setLoading","MANUFACTURER_ROLE","utils","keccak256","checkUserRole","accounts","eth","getAccounts","length","console","error","userAddress","hasManufacturerRole","methods","hasRole","call","children","path","element","to"],"sources":["C:/Users/allen/Blockchain/product-authentication/src/appRendering/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport contract from '../SC/contract.js'; \nimport UserPage from '../components/userPage.js'; \nimport ManufacturerDashboard from '../components/manufacturerPage.js';\nimport NotFound from '../components/notFound.js';\nimport MintProduct from '../components/mintProduct.js';\nimport BurnProduct from '../components/burnProduct.js';\nimport '../css_files/App.css';\nimport web3 from '../SC/web3.js';\n\nconst App = () => {\n    const [isManufacturer, setIsManufacturer] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n\n    useEffect(() => {\n        const MANUFACTURER_ROLE = web3.utils.keccak256(\"MANUFACTURER_ROLE\");\n        const checkUserRole = async () => {\n            try {\n                const accounts = await web3.eth.getAccounts();\n                if (accounts.length === 0) {\n                    console.error(\"No accessible accounts. Make sure MetaMask is connected.\");\n                    return;\n                }\n                const userAddress = accounts[0]; \n                const hasManufacturerRole = await contract.methods.hasRole(MANUFACTURER_ROLE, userAddress).call();\n                setIsManufacturer(hasManufacturerRole);\n            } catch (error) {\n                console.error(\"Error checking user role:\", error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        checkUserRole();\n    }, []);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<Navigate to={isManufacturer ? \"/manufacturer-dashboard\" : \"/user-dashboard\"} />} />\n                <Route path=\"/manufacturer-dashboard\" element={isManufacturer ? <ManufacturerDashboard /> : <Navigate to=\"/user-dashboard\" />} />\n                <Route path=\"/user-dashboard\" element={<UserPage />} />\n                <Route path=\"/mint-product\" element={isManufacturer ? <MintProduct /> : <Navigate to=\"/dashboard\" />} />\n                <Route path=\"/burn-product\" element={isManufacturer ? <BurnProduct /> : <Navigate to=\"/dashboard\" />} />\n                <Route path=\"*\" element={<NotFound />} />\n            </Routes>\n        </Router>\n    );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}