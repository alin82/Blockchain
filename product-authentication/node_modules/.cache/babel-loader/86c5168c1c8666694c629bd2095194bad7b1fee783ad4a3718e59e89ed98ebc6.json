{"ast":null,"code":"import React,{useState}from'react';import web3 from'../SC/web3';import contract from'../SC/contract';import{useNavigate}from'react-router-dom';import'../css_files/burn.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const BurnProductPage=()=>{const[serial,setSerial]=useState('');const[result,setResult]=useState('');const navigate=useNavigate();const burnProduct=async event=>{event.preventDefault();try{const accounts=await web3.eth.getAccounts();if(accounts.length===0){setResult(\"No accessible accounts. Make sure MetaMask is connected.\");return;}const userAddress=accounts[0];await contract.methods.burnProduct(userAddress,serial).send({from:userAddress});setResult(\"Product burned successfully\");//THIS FOLLOWING CODE IS FOR VIEWING THE INFORMATION OF THE BLOCK\n// const burnResult = await contract.methods.burnProduct(userAddress, serial).send({ from: userAddress });\n// const replacer = (key, value) => \n//     typeof value === 'bigint' ? value.toString() : value;\n// setResult(`Product burned successfully: ${JSON.stringify(burnResult, replacer)}`);\n}catch(error){console.error('Error burning product:',error);setResult(\"Failed to burn product: \".concat(error.message));}};const goToManufacturerDashboard=()=>{navigate('/manufacturer-dashboard');};return/*#__PURE__*/_jsxs(\"div\",{className:\"burn-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Burn Product\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:burnProduct,children:[/*#__PURE__*/_jsx(\"input\",{className:\"input-field\",type:\"text\",value:serial,onChange:e=>setSerial(e.target.value),placeholder:\"Serial Number\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",type:\"submit\",children:\"Burn Product\"})]}),result&&/*#__PURE__*/_jsx(\"p\",{className:\"result\",children:result}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:goToManufacturerDashboard,children:\"Back to Dashboard\"})]});};export default BurnProductPage;","map":{"version":3,"names":["React","useState","web3","contract","useNavigate","jsx","_jsx","jsxs","_jsxs","BurnProductPage","serial","setSerial","result","setResult","navigate","burnProduct","event","preventDefault","accounts","eth","getAccounts","length","userAddress","methods","send","from","error","console","concat","message","goToManufacturerDashboard","className","children","onSubmit","type","value","onChange","e","target","placeholder","onClick"],"sources":["C:/Users/allen/Blockchain/product-authentication/src/components/burnProduct.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport web3 from '../SC/web3';\r\nimport contract from '../SC/contract';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../css_files/burn.css'\r\n\r\nconst BurnProductPage = () => {\r\n    const [serial, setSerial] = useState('');\r\n    const [result, setResult] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const burnProduct = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n            if (accounts.length === 0) {\r\n                setResult(\"No accessible accounts. Make sure MetaMask is connected.\");\r\n                return;\r\n            }\r\n            const userAddress = accounts[0];\r\n            await contract.methods.burnProduct(userAddress, serial).send({ from: userAddress });\r\n            setResult(`Product burned successfully`);\r\n\r\n            //THIS FOLLOWING CODE IS FOR VIEWING THE INFORMATION OF THE BLOCK\r\n            // const burnResult = await contract.methods.burnProduct(userAddress, serial).send({ from: userAddress });\r\n            // const replacer = (key, value) => \r\n            //     typeof value === 'bigint' ? value.toString() : value;\r\n            \r\n            // setResult(`Product burned successfully: ${JSON.stringify(burnResult, replacer)}`);\r\n        } catch (error) {\r\n            console.error('Error burning product:', error);\r\n            setResult(`Failed to burn product: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    const goToManufacturerDashboard = () => {\r\n        navigate('/manufacturer-dashboard'); \r\n    };\r\n\r\n    return (\r\n        <div className=\"burn-container\">\r\n            <h2>Burn Product</h2>\r\n            <form onSubmit={burnProduct}>\r\n                <input className=\"input-field\" type=\"text\" value={serial} onChange={(e) => setSerial(e.target.value)} placeholder=\"Serial Number\" />\r\n                <button className=\"button\" type=\"submit\">Burn Product</button>\r\n            </form>\r\n            {result && <p className=\"result\">{result}</p>}\r\n            <button className=\"button\" onClick={goToManufacturerDashboard}>Back to Dashboard</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BurnProductPage;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,IAAI,KAAM,YAAY,CAC7B,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CACrC,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,uBAAuB,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9B,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACW,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAAAa,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAW,WAAW,CAAG,KAAO,CAAAC,KAAK,EAAK,CACjCA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAhB,IAAI,CAACiB,GAAG,CAACC,WAAW,CAAC,CAAC,CAC7C,GAAIF,QAAQ,CAACG,MAAM,GAAK,CAAC,CAAE,CACvBR,SAAS,CAAC,0DAA0D,CAAC,CACrE,OACJ,CACA,KAAM,CAAAS,WAAW,CAAGJ,QAAQ,CAAC,CAAC,CAAC,CAC/B,KAAM,CAAAf,QAAQ,CAACoB,OAAO,CAACR,WAAW,CAACO,WAAW,CAAEZ,MAAM,CAAC,CAACc,IAAI,CAAC,CAAEC,IAAI,CAAEH,WAAY,CAAC,CAAC,CACnFT,SAAS,8BAA8B,CAAC,CAExC;AACA;AACA;AACA;AAEA;AACJ,CAAE,MAAOa,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9Cb,SAAS,4BAAAe,MAAA,CAA4BF,KAAK,CAACG,OAAO,CAAE,CAAC,CACzD,CACJ,CAAC,CAED,KAAM,CAAAC,yBAAyB,CAAGA,CAAA,GAAM,CACpChB,QAAQ,CAAC,yBAAyB,CAAC,CACvC,CAAC,CAED,mBACIN,KAAA,QAAKuB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC3B1B,IAAA,OAAA0B,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBxB,KAAA,SAAMyB,QAAQ,CAAElB,WAAY,CAAAiB,QAAA,eACxB1B,IAAA,UAAOyB,SAAS,CAAC,aAAa,CAACG,IAAI,CAAC,MAAM,CAACC,KAAK,CAAEzB,MAAO,CAAC0B,QAAQ,CAAGC,CAAC,EAAK1B,SAAS,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAACI,WAAW,CAAC,eAAe,CAAE,CAAC,cACpIjC,IAAA,WAAQyB,SAAS,CAAC,QAAQ,CAACG,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,cAAY,CAAQ,CAAC,EAC5D,CAAC,CACNpB,MAAM,eAAIN,IAAA,MAAGyB,SAAS,CAAC,QAAQ,CAAAC,QAAA,CAAEpB,MAAM,CAAI,CAAC,cAC7CN,IAAA,WAAQyB,SAAS,CAAC,QAAQ,CAACS,OAAO,CAAEV,yBAA0B,CAAAE,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EACxF,CAAC,CAEd,CAAC,CAED,cAAe,CAAAvB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}